1 begin_block max3 _ _
2 + counterFunctionCalls 1 T_1
3 := T_1 _ counterFunctionCalls
4 > x y _
5 jump _ _ 6
6 > x z 8
7 jump _ _ 10
8 := x _ m
9 jump _ _ 18
10 > y x _
11 jump _ _ 12
12 > y z 14
13 jump _ _ 16
14 := y _ m
15 jump _ _ 16
16 := z _ m
17 ret m _ _
18 end_block max3 _ _
19 begin_block fib _ _
20 + counterFunctionCalls 1 T_2
21 := T_2 _ counterFunctionCalls
22 < x 0 24
23 jump _ _ 26
24 ret 1 _ _
25 jump _ _ 40
26 == x 0 30
27 jump _ _ 28
28 == x 1 30
29 jump _ _ 32
30 ret 1 _ _
31 jump _ _ 32
32 - x 1 T_3
33 par T_4 RET _
34 call fib _ _
35 - x 2 T_5
36 par T_6 RET _
37 call fib _ _
38 + T_4 T_6 T_7
39 ret T_7 _ _
40 end_block fib _ _
41 begin_block divides _ _
42 + counterFunctionCalls 1 T_8
43 := T_8 _ counterFunctionCalls
44 // y x T_9
45 * T_9 x T_10
46 == y T_10 48
47 jump _ _ 50
48 ret 1 _ _
49 jump _ _ 51
50 ret 0 _ _
51 end_block divides _ _
52 begin_block isPrime _ _
53 + counterFunctionCalls 1 T_11
54 := T_11 _ counterFunctionCalls
55 := 2 _ i
56 < i x 58
57 jump _ _ 67
58 par T_12 RET _
59 call divides _ _
60 == T_12 1 62
61 jump _ _ 66
62 ret 0 _ _
63 + i 1 T_13
64 := T_13 _ i
65 jump _ _ 66
66 jump _ _ 56
67 ret 1 _ _
68 end_block isPrime _ _
69 begin_block sqr _ _
70 + counterFunctionCalls 1 T_14
71 := T_14 _ counterFunctionCalls
72 * x x T_15
73 ret T_15 _ _
74 end_block sqr _ _
75 begin_block quad _ _
76 + counterFunctionCalls 1 T_16
77 := T_16 _ counterFunctionCalls
78 par T_17 RET _
79 call sqr _ _
80 par T_18 RET _
81 call sqr _ _
82 * T_17 T_18 T_19
83 := T_19 _ y
84 ret y _ _
85 end_block quad _ _
86 begin_block leap _ _
87 + counterFunctionCalls 1 T_20
88 := T_20 _ counterFunctionCalls
89 % year 4 T_21
90 == T_21 0 _
91 jump _ _ 92
92 % year 100 T_22
93 != T_22 0 98
94 jump _ _ 95
95 % year 400 T_23
96 == T_23 0 98
97 jump _ _ 100
98 ret 1 _ _
99 jump _ _ 101
100 ret 0 _ _
101 end_block leap _ _
102 begin_block main _ _
103 := 0 _ counterFunctionCalls
104 := input _ i
105 out i _ _
106 := 1600 _ i
107 <= i 2000 109
108 jump _ _ 115
109 par T_24 RET _
110 call leap _ _
111 out T_24 _ _
112 + i 400 T_25
113 := T_25 _ i
114 jump _ _ 107
115 par T_26 RET _
116 call leap _ _
117 out T_26 _ _
118 par T_27 RET _
119 call leap _ _
120 out T_27 _ _
121 par T_28 RET _
122 call quad _ _
123 out T_28 _ _
124 par T_29 RET _
125 call fib _ _
126 out T_29 _ _
127 := 1 _ i
128 <= i 12 130
129 jump _ _ 136
130 par T_30 RET _
131 call isPrime _ _
132 out T_30 _ _
133 + i 1 T_31
134 := T_31 _ i
135 jump _ _ 128
136 out counterFunctionCalls _ _
137 halt _ _ _
138 end_block main _ _

